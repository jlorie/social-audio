{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "lambda.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }]
        },
        "Path": "/"
      }
    },

    "IamPolicyLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "Resource": "arn:aws:logs:${region}:*:*"
          }, {
            "Effect": "Allow",
            "Action": [
              "dynamodb:BatchGetItem",
              "dynamodb:BatchWriteItem",
              "dynamodb:DeleteItem",
              "dynamodb:GetItem",
              "dynamodb:PutItem",
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:UpdateItem",
              "dynamodb:GetRecords",
              "dynamodb:GetShardIterator",
              "dynamodb:DescribeStream",
              "dynamodb:ListStreams"
            ],
            "Resource": [
              "*"
            ]
          }, {
            "Effect": "Allow",
            "Action": [
              "sns:Publish",
              "sns:CreatePlatformEndpoint",
              "sns:DeleteEndpoint",
              "sns:SetEndpointAttributes"
            ],
            "Resource": [
              "*"
            ]
          }, {
            "Effect": "Allow",
            "Action": [
              "s3:DeleteObject",
              "s3:GetObject",
              "s3:PutObject"
            ],
            "Resource": [
              "*"
            ]
          }, {
            "Effect": "Allow",
            "Action": [
              "sqs:DeleteMessage",
              "sqs:ReceiveMessage",
              "sqs:SendMessage"
            ],
            "Resource": [
              "*"
            ]
          }, {
            "Effect": "Allow",
            "Action": [
              "lambda:InvokeFunction"
            ],
            "Resource": [
              "*"
            ]
          }, {
            "Effect": "Allow",
            "Action": [
              "ses:SendEmail",
              "ses:SendRawEmail"
            ],
            "Resource": [
              "*"
            ]
          }]
        },
        "Roles": [{
          "Ref": "IamRoleLambda"
        }]
      }
    },

    "UsersDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "id",
          "AttributeType": "S"
        }, {
          "AttributeName": "username",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "username",
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-users",
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "GlobalSecondaryIndexes": [{
          "IndexName": "index-id",
          "KeySchema": [{
            "AttributeName": "id",
            "KeyType": "HASH"
          }],
          "Projection": {
            "ProjectionType": "ALL"
          },
          "ProvisionedThroughput": {
            "ReadCapacityUnits": "${db-rcu}",
            "WriteCapacityUnits": "${db-wcu}"
          }
        }]
      }
    },

    "ElementsDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "id",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "id",
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-elements",
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        }
      }
    },

    "ElementsByUsersDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "user_id",
          "AttributeType": "S"
        }, {
          "AttributeName": "created_at",
          "AttributeType": "S"
        }, {
          "AttributeName": "id",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "user_id",
          "KeyType": "HASH"
        }, {
          "AttributeName": "created_at",
          "KeyType": "RANGE"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-elements-by-users",
        "GlobalSecondaryIndexes": [{
          "IndexName": "index-id",
          "KeySchema": [{
            "AttributeName": "id",
            "KeyType": "HASH"
          }, {
            "AttributeName": "user_id",
            "KeyType": "RANGE"
          }],
          "Projection": {
            "ProjectionType": "ALL"
          },
          "ProvisionedThroughput": {
            "ReadCapacityUnits": "${db-rcu}",
            "WriteCapacityUnits": "${db-wcu}"
          }
        }]
      }
    },

    "DevicesByUsersDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "user_id",
          "AttributeType": "S"
        }, {
          "AttributeName": "device_token",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "user_id",
          "KeyType": "HASH"
        }, {
          "AttributeName": "device_token",
          "KeyType": "RANGE"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-devices-by-users",
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        }
      }
    },

    "NotificationsDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "user_id",
          "AttributeType": "S"
        }, {
          "AttributeName": "created_at",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "user_id",
          "KeyType": "HASH"
        }, {
          "AttributeName": "created_at",
          "KeyType": "RANGE"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-notifications"
      }
    },

    "GeneralConfigDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "key",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "key",
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-general-config"
      }
    },

    "UsersLogDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "user_id",
          "AttributeType": "S"
        }, {
          "AttributeName": "created_at",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "user_id",
          "KeyType": "HASH"
        }, {
          "AttributeName": "created_at",
          "KeyType": "RANGE"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-users-log"
      }
    },

    "FeedbackDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "user_id",
          "AttributeType": "S"
        }, {
          "AttributeName": "created_at",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "user_id",
          "KeyType": "HASH"
        }, {
          "AttributeName": "created_at",
          "KeyType": "RANGE"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${db-rcu}",
          "WriteCapacityUnits": "${db-wcu}"
        },
        "TableName": "${stage}-feedback"
      }
    },

    "ElementsBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "${stage}-bbluue-files"
      }
    },
    "UploadBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "${stage}-bbluue-upload",
        "LifecycleConfiguration": {
          "Rules": [{
            "Status": "Enabled",
            "ExpirationInDays": "1"
          }]
        }
      }
    },

    "RegisteredUserTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "${stage}-registered-user"
      }
    },

    "RegisteredElementTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "${stage}-registered-element"
      }
    },

    "DeletedElementTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "${stage}-deleted-element"
      }
    },

    "AttachmentUploadedTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "${stage}-attachment-uploaded"
      }
    }
  },
  "Outputs": {
    "IamRoleArnLambda": {
      "Description": "ARN of the lambda IAM role",
      "Value": {
        "Fn::GetAtt": [
          "IamRoleLambda",
          "Arn"
        ]
      }
    },
    "UsersTableName": {
      "Value": {
        "Ref": "UsersDynamoTable"
      }
    },
    "UsersStreamArn": {
      "Value": {
        "Fn::GetAtt": [
          "UsersDynamoTable",
          "StreamArn"
        ]
      }
    },
    "ElementsTableName": {
      "Value": {
        "Ref": "ElementsDynamoTable"
      }
    },
    "ElementsStreamArn": {
      "Value": {
        "Fn::GetAtt": [
          "ElementsDynamoTable",
          "StreamArn"
        ]
      }
    },
    "ElementsByUsersTableName": {
      "Value": {
        "Ref": "ElementsByUsersDynamoTable"
      }
    },
    "DevicesByUsersTableName": {
      "Value": {
        "Ref": "DevicesByUsersDynamoTable"
      }
    },
    "NotificationsTableName": {
      "Value": {
        "Ref": "NotificationsDynamoTable"
      }
    },
    "GeneralConfigTableName": {
      "Value": {
        "Ref": "GeneralConfigDynamoTable"
      }
    },
    "UsersLogTableName": {
      "Value": {
        "Ref": "UsersLogDynamoTable"
      }
    },
    "FeedbackTableName": {
      "Value": {
        "Ref": "FeedbackDynamoTable"
      }
    },
    "ElementsBucketName": {
      "Value": {
        "Ref": "ElementsBucket"
      }
    },
    "UploadBucketName": {
      "Value": {
        "Ref": "UploadBucket"
      }
    },
    "RegisteredUserTopicArn": {
      "Value": {
        "Ref": "RegisteredUserTopic"
      }
    },
    "RegisteredElementTopicArn": {
      "Value": {
        "Ref": "RegisteredElementTopic"
      }
    },
    "DeletedElementTopicArn": {
      "Value": {
        "Ref": "DeletedElementTopic"
      }
    },
    "AttachmentUploadedTopicArn": {
      "Value": {
        "Ref": "AttachmentUploadedTopic"
      }
    }
  }
}
